const bus = require('@gotoeasy/bus');


bus.on('章节编号', function (oVal){

    if ( !oVal || !oVal.value ) return null;

    let str = (oVal.value + '').trim();
    let match = str.match(/^[0-9１２３４５６７８９０一二三四五六七八九〇ⅠⅡⅢⅣⅤⅥⅦⅧⅨ㈠㈡㈢㈣㈤㈥㈦㈧㈨⒈⒉⒊⒋⒌⒍⒎⒏⒐Ⅺ⒑㈩⑽]+[0-9１２３４５６７８９０一二三四五六七八九〇ⅠⅡⅢⅣⅤⅥⅦⅧⅨ㈠㈡㈢㈣㈤㈥㈦㈧㈨⒈⒉⒊⒋⒌⒍⒎⒏⒐Ⅺ⒑㈩⑽.．－-]*/);
    if ( !match ) return null;

    let oNum = {
        '１': '1',  '一': '1',  'Ⅰ': '1',   '⑴': '1',   '㈠': '1',   '⒈': '1',
        '２': '2',  '二': '2',  'Ⅱ': '2',   '⑵': '2',   '㈡': '2',   '⒉': '2',
        '３': '3',  '三': '3',  'Ⅲ': '3',  '⑶': '3',   '㈢': '3',   '⒊': '3',
        '４': '4',  '四': '4',  'Ⅴ': '4',  '⑷': '4',   '㈣': '4',   '⒋': '4',
        '５': '5',  '五': '5',  'Ⅵ': '5',  '⑸': '5',   '㈤': '5',   '⒌': '5',
        '６': '6',  '六': '6',  'Ⅶ': '6',  '⑹': '6',   '㈥': '6',   '⒍': '6',
        '７': '7',  '七': '7',  'Ⅷ': '7',  '⑺': '7',  '㈦': '7',  '⒎': '7',
        '８': '8',  '八': '8',  'Ⅸ': '8',  '⑻': '8',   '㈧': '8',   '⒏': '8',
        '９': '9',  '九': '9',  'Ⅹ': '9',   '⑼': '9',  '㈨': '9',  '⒐': '9',
        '０': '0',  '〇': '0',
        'Ⅺ': '10',  '⒑': '10',  '㈩': '10',  '⑽': '10',
    };

    let strMatch = match[0].split('').map(ch => oNum[ch] ? oNum[ch] : ch).join('');                 // 数字统一替换为半角数字
    strMatch = strMatch.replace(/[.．－]+/g, '-');                                                   // 分隔符统一替换为半角减号

    let ary = strMatch.split('-');
    ary = ary.map( v => ((100+(v-0))+'').substring(1) );                                            // 每段统一2位长度
    //while (ary.length < 5) ary.push('00');                                                        // 统一为5段，便于字符串方式比较
    let seq = ary.join('-');
    let cell = oVal.cell;

    return {cell, seq, orig:match[0]};
});
