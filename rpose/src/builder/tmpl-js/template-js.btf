[template]

// ------------------------------------------------------------------------------------------------------
// 组件 <%= $data['$componentName'] %>
// 注:应通过rpose.newComponentProxy方法创建组件代理对象后使用，而不是直接调用方法或用new创建
// ------------------------------------------------------------------------------------------------------
<% if ( $data['singleton'] ){ %>
    // 这是个单例组件
    <%= $data['$componentName'] %>.Singleton = true;
<% } %>

// 属性接口定义
<%= $data['$componentName'] %>.prototype.$OPTION_KEYS = <%= JSON.stringify($data['optionkeys']) %>;  // 可通过标签配置的属性，未定义则不支持外部配置
<%= $data['$componentName'] %>.prototype.$STATE_KEYS = <%= JSON.stringify($data['statekeys']) %>;    // 可更新的state属性，未定义则不支持外部更新state

// 组件函数
function <%= $data['$componentName'] %>(options={}) {

    <% if ( $data['optionkeys'] != null ){ %>
    // 组件默认选项值
    this.$options = <%= $data['options'] %>;
    rpose.extend(this.$options, options, this.$OPTION_KEYS);    // 按属性接口克隆配置选项
    <% }else{ %>
    // 组件默认选项值
    this.$options = <%= $data['options'] %>;
    <% } %>

    <% if ( $data['statekeys'] != null ){ %>
    // 组件默认数据状态值
    this.$state = <%= $data['state'] %>;
    rpose.extend(this.$state, options, this.$STATE_KEYS);       // 按属性接口克隆数据状态
    <% }else{ %>
    // 组件默认数据状态值
    this.$state = <%= $data['state'] %>;
    <% } %>

    <% if ( $data['actions'] ){ %>
    // 事件处理器
    <%= $data['actions'] %>
    <% } %>

    <% if ( $data['methods'] ){ %>
    // 自定义方法
    <%= $data['methods'] %>;
    <% } %>

    <% if ( $data['updater'] ){ %>
    // 组件更新函数
    this.$updater = <%= $data['updater'] %>;
    <% } %>

    <% let actionskeys = $data['actionskeys'] || []; %>
}

/**
 * 节点模板函数
 */
<%= $data['$componentName'] %>.prototype.nodeTemplate = <%= $data['$fnTemplate'] %>

