[api]
prerender = loader // loader （旋转动画），loader-section （旋转动画加芝麻开门）

[view]
<ui-layout>
    <div slot="header">
        <ui-navbar/>
    </div>
    <div slot="main">
        <div class="warp">
            <ul>
            {% for (let i=0,icon; icon=$state.icons[i++]; ) { %}
                <li iconid={icon.id} onclick='fnClick' favorite={icon.favorite||''} class="rpose-icon {'rpose-favorite': icon.favorite}">
                    <svg-icon d={icon.d}/>
                    {% for (let j=0,kw; kw=icon.keywords[j++]; ) { %}
                    <br><span onclick="fnClickSpan" >{kw}</span>
                    {% } %}
                </li>
            {% } %}
            </ul>
        </div>
    </div>
</ui-layout>

[state]
{
    icons: [],
    total: 0,
    favorites: 0
}

[actions]
{
    fnClickSpan: e => {
        e.target.parentNode.click();
    },
    fnClick: e => {
        let axios = require('axios');
        let $$el = $$(e.target);
        let iconid = $$el.attr('iconid');
        let favorite = $$el.attr('favorite');
        if ( favorite ) {
            axios.get('/removefavorites?id=' + iconid).then(res=>{
                this.$state.favorites--;
                rpose.at('update.count', this.$state.total, this.$state.favorites);
            }).catch(console.error);
            $$el.attr('favorite', '');
            $$el.removeClass('rpose-favorite');
        }else{
            axios.get('/addfavorites?id=' + iconid).then(res=>{
                this.$state.favorites++;
                rpose.at('update.count', this.$state.total, this.$state.favorites);
            }).catch(console.error);

            $$el.attr('favorite', 'true');
            $$el.addClass('rpose-favorite');
        }

        rpose.at('update.count', this.$state.total, this.$state.favorites);
    }
}

[methods]
{
    init: () => {
        rpose.on('window.onload', e => {
            let url = location.href.indexOf('/favorites.html') > 0 ? '/favorites' : 'list';
            require('axios').get(url).then(res => {
                this.$state.icons = res.data.icons;
                this.$state.total = res.data.total;
                this.$state.favorites = res.data.favorites;
                this.render();

                rpose.at('update.count', this.$state.total, this.$state.favorites);
                this.$state.icons = [];
            }).catch(console.error);
        });

        rpose.on('search', searchkeys => {
            require('axios').get('/search?key=' + searchkeys).then(res => {
                this.$state.icons = [];
                this.render();

                this.$state.icons = res.data.icons;
                this.$state.total = res.data.total;
                this.$state.favorites = res.data.favorites;
                this.render();

                this.$state.icons = [];
                rpose.at('update.count', this.$state.total, this.$state.favorites);
            }).catch(console.error);
        });
    }
}

[mount]
body

[css]
body{
	margin: 0;
    background-color: #F9F9F9;
}

.warp{
    margin:5px 0 10px 20px;
    display:block;
}

.warp > ul{
    text-align:center;
    list-style:none;
    margin:0;
    padding:0;
}

.warp > ul > li{
    width:100px;
    height:70px;
    text-align:center;
    float:left;
    background-color:#4FC08D;
    color:white;
    margin:1px;
    padding-top:10px;
}

.hide{
    display: none;
}

.rpose-favorite{
    background-color:#0C9D58 !important;
    display: inline !important;
}

.warp > ul > li > span{
    font-size:13px;
}
